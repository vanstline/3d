// source: backend_api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.interactive3d_api.AssetItem', null, global);
goog.exportSymbol('proto.interactive3d_api.AssetLabel', null, global);
goog.exportSymbol('proto.interactive3d_api.AssetTypeItem', null, global);
goog.exportSymbol('proto.interactive3d_api.CategoryItemResponse', null, global);
goog.exportSymbol('proto.interactive3d_api.CreateResourceRequest', null, global);
goog.exportSymbol('proto.interactive3d_api.CreateResourceResponse', null, global);
goog.exportSymbol('proto.interactive3d_api.CreateResourceUrlRequest', null, global);
goog.exportSymbol('proto.interactive3d_api.CreateResourceUrlResponse', null, global);
goog.exportSymbol('proto.interactive3d_api.DeleteBatchAssetsRequest', null, global);
goog.exportSymbol('proto.interactive3d_api.DeleteResourceByModelIdRequest', null, global);
goog.exportSymbol('proto.interactive3d_api.DeleteResourceUrlRequest', null, global);
goog.exportSymbol('proto.interactive3d_api.EmptyResponse', null, global);
goog.exportSymbol('proto.interactive3d_api.ExportAssetByIdRequest', null, global);
goog.exportSymbol('proto.interactive3d_api.GetAssetLabelsByIdsRequest', null, global);
goog.exportSymbol('proto.interactive3d_api.GetAssetLabelsByIdsResponse', null, global);
goog.exportSymbol('proto.interactive3d_api.GetResourceInfoRequest', null, global);
goog.exportSymbol('proto.interactive3d_api.GetResourceInfoResponse', null, global);
goog.exportSymbol('proto.interactive3d_api.GetResourceUrlInfoRequest', null, global);
goog.exportSymbol('proto.interactive3d_api.GetResourceUrlInfoResponse', null, global);
goog.exportSymbol('proto.interactive3d_api.ListAssetLabelsRequest', null, global);
goog.exportSymbol('proto.interactive3d_api.ListAssetLabelsResponse', null, global);
goog.exportSymbol('proto.interactive3d_api.ListAssetTypesRequest', null, global);
goog.exportSymbol('proto.interactive3d_api.ListAssetTypesResponse', null, global);
goog.exportSymbol('proto.interactive3d_api.ListAssetsRequest', null, global);
goog.exportSymbol('proto.interactive3d_api.ListAssetsResponse', null, global);
goog.exportSymbol('proto.interactive3d_api.ListCategoryRequest', null, global);
goog.exportSymbol('proto.interactive3d_api.ListCategoryResponse', null, global);
goog.exportSymbol('proto.interactive3d_api.ListResourceUrlRequest', null, global);
goog.exportSymbol('proto.interactive3d_api.ListResourceUrlResponse', null, global);
goog.exportSymbol('proto.interactive3d_api.ListResourcesRequest', null, global);
goog.exportSymbol('proto.interactive3d_api.ListResourcesResponse', null, global);
goog.exportSymbol('proto.interactive3d_api.ResourceUrlsItemRequest', null, global);
goog.exportSymbol('proto.interactive3d_api.ResourceUrlsItemResponse', null, global);
goog.exportSymbol('proto.interactive3d_api.ResourcesItemRequest', null, global);
goog.exportSymbol('proto.interactive3d_api.UpdateResourceRequest', null, global);
goog.exportSymbol('proto.interactive3d_api.UpdateResourceUrlRequest', null, global);
goog.exportSymbol('proto.interactive3d_api.ValidResourceUrlRequest', null, global);
goog.exportSymbol('proto.interactive3d_api.ValidResourceUrlResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.EmptyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.interactive3d_api.EmptyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.EmptyResponse.displayName = 'proto.interactive3d_api.EmptyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.ListResourcesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.interactive3d_api.ListResourcesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.ListResourcesRequest.displayName = 'proto.interactive3d_api.ListResourcesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.ResourcesItemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.interactive3d_api.ResourcesItemRequest.repeatedFields_, null);
};
goog.inherits(proto.interactive3d_api.ResourcesItemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.ResourcesItemRequest.displayName = 'proto.interactive3d_api.ResourcesItemRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.ListResourcesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.interactive3d_api.ListResourcesResponse.repeatedFields_, null);
};
goog.inherits(proto.interactive3d_api.ListResourcesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.ListResourcesResponse.displayName = 'proto.interactive3d_api.ListResourcesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.CreateResourceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.interactive3d_api.CreateResourceRequest.repeatedFields_, null);
};
goog.inherits(proto.interactive3d_api.CreateResourceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.CreateResourceRequest.displayName = 'proto.interactive3d_api.CreateResourceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.CreateResourceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.interactive3d_api.CreateResourceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.CreateResourceResponse.displayName = 'proto.interactive3d_api.CreateResourceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.DeleteResourceByModelIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.interactive3d_api.DeleteResourceByModelIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.DeleteResourceByModelIdRequest.displayName = 'proto.interactive3d_api.DeleteResourceByModelIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.UpdateResourceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.interactive3d_api.UpdateResourceRequest.repeatedFields_, null);
};
goog.inherits(proto.interactive3d_api.UpdateResourceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.UpdateResourceRequest.displayName = 'proto.interactive3d_api.UpdateResourceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.CreateResourceUrlRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.interactive3d_api.CreateResourceUrlRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.CreateResourceUrlRequest.displayName = 'proto.interactive3d_api.CreateResourceUrlRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.CreateResourceUrlResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.interactive3d_api.CreateResourceUrlResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.CreateResourceUrlResponse.displayName = 'proto.interactive3d_api.CreateResourceUrlResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.GetResourceUrlInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.interactive3d_api.GetResourceUrlInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.GetResourceUrlInfoRequest.displayName = 'proto.interactive3d_api.GetResourceUrlInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.ResourceUrlsItemResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.interactive3d_api.ResourceUrlsItemResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.ResourceUrlsItemResponse.displayName = 'proto.interactive3d_api.ResourceUrlsItemResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.GetResourceUrlInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.interactive3d_api.GetResourceUrlInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.GetResourceUrlInfoResponse.displayName = 'proto.interactive3d_api.GetResourceUrlInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.UpdateResourceUrlRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.interactive3d_api.UpdateResourceUrlRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.UpdateResourceUrlRequest.displayName = 'proto.interactive3d_api.UpdateResourceUrlRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.ListResourceUrlRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.interactive3d_api.ListResourceUrlRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.ListResourceUrlRequest.displayName = 'proto.interactive3d_api.ListResourceUrlRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.ResourceUrlsItemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.interactive3d_api.ResourceUrlsItemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.ResourceUrlsItemRequest.displayName = 'proto.interactive3d_api.ResourceUrlsItemRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.ListResourceUrlResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.interactive3d_api.ListResourceUrlResponse.repeatedFields_, null);
};
goog.inherits(proto.interactive3d_api.ListResourceUrlResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.ListResourceUrlResponse.displayName = 'proto.interactive3d_api.ListResourceUrlResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.DeleteResourceUrlRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.interactive3d_api.DeleteResourceUrlRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.DeleteResourceUrlRequest.displayName = 'proto.interactive3d_api.DeleteResourceUrlRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.ValidResourceUrlRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.interactive3d_api.ValidResourceUrlRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.ValidResourceUrlRequest.displayName = 'proto.interactive3d_api.ValidResourceUrlRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.ValidResourceUrlResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.interactive3d_api.ValidResourceUrlResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.ValidResourceUrlResponse.displayName = 'proto.interactive3d_api.ValidResourceUrlResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.GetResourceInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.interactive3d_api.GetResourceInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.GetResourceInfoRequest.displayName = 'proto.interactive3d_api.GetResourceInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.GetResourceInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.interactive3d_api.GetResourceInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.GetResourceInfoResponse.displayName = 'proto.interactive3d_api.GetResourceInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.ListCategoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.interactive3d_api.ListCategoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.ListCategoryRequest.displayName = 'proto.interactive3d_api.ListCategoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.CategoryItemResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.interactive3d_api.CategoryItemResponse.repeatedFields_, null);
};
goog.inherits(proto.interactive3d_api.CategoryItemResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.CategoryItemResponse.displayName = 'proto.interactive3d_api.CategoryItemResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.ListCategoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.interactive3d_api.ListCategoryResponse.repeatedFields_, null);
};
goog.inherits(proto.interactive3d_api.ListCategoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.ListCategoryResponse.displayName = 'proto.interactive3d_api.ListCategoryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.ListAssetsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.interactive3d_api.ListAssetsRequest.repeatedFields_, null);
};
goog.inherits(proto.interactive3d_api.ListAssetsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.ListAssetsRequest.displayName = 'proto.interactive3d_api.ListAssetsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.AssetItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.interactive3d_api.AssetItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.AssetItem.displayName = 'proto.interactive3d_api.AssetItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.ListAssetsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.interactive3d_api.ListAssetsResponse.repeatedFields_, null);
};
goog.inherits(proto.interactive3d_api.ListAssetsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.ListAssetsResponse.displayName = 'proto.interactive3d_api.ListAssetsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.ExportAssetByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.interactive3d_api.ExportAssetByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.ExportAssetByIdRequest.displayName = 'proto.interactive3d_api.ExportAssetByIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.ListAssetTypesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.interactive3d_api.ListAssetTypesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.ListAssetTypesRequest.displayName = 'proto.interactive3d_api.ListAssetTypesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.AssetTypeItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.interactive3d_api.AssetTypeItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.AssetTypeItem.displayName = 'proto.interactive3d_api.AssetTypeItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.ListAssetTypesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.interactive3d_api.ListAssetTypesResponse.repeatedFields_, null);
};
goog.inherits(proto.interactive3d_api.ListAssetTypesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.ListAssetTypesResponse.displayName = 'proto.interactive3d_api.ListAssetTypesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.AssetLabel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.interactive3d_api.AssetLabel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.AssetLabel.displayName = 'proto.interactive3d_api.AssetLabel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.ListAssetLabelsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.interactive3d_api.ListAssetLabelsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.ListAssetLabelsRequest.displayName = 'proto.interactive3d_api.ListAssetLabelsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.ListAssetLabelsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.interactive3d_api.ListAssetLabelsResponse.repeatedFields_, null);
};
goog.inherits(proto.interactive3d_api.ListAssetLabelsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.ListAssetLabelsResponse.displayName = 'proto.interactive3d_api.ListAssetLabelsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.GetAssetLabelsByIdsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.interactive3d_api.GetAssetLabelsByIdsRequest.repeatedFields_, null);
};
goog.inherits(proto.interactive3d_api.GetAssetLabelsByIdsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.GetAssetLabelsByIdsRequest.displayName = 'proto.interactive3d_api.GetAssetLabelsByIdsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.GetAssetLabelsByIdsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.interactive3d_api.GetAssetLabelsByIdsResponse.repeatedFields_, null);
};
goog.inherits(proto.interactive3d_api.GetAssetLabelsByIdsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.GetAssetLabelsByIdsResponse.displayName = 'proto.interactive3d_api.GetAssetLabelsByIdsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.interactive3d_api.DeleteBatchAssetsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.interactive3d_api.DeleteBatchAssetsRequest.repeatedFields_, null);
};
goog.inherits(proto.interactive3d_api.DeleteBatchAssetsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.interactive3d_api.DeleteBatchAssetsRequest.displayName = 'proto.interactive3d_api.DeleteBatchAssetsRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.EmptyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.EmptyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.EmptyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.EmptyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.EmptyResponse}
 */
proto.interactive3d_api.EmptyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.EmptyResponse;
  return proto.interactive3d_api.EmptyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.EmptyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.EmptyResponse}
 */
proto.interactive3d_api.EmptyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.EmptyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.EmptyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.EmptyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.EmptyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.ListResourcesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.ListResourcesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.ListResourcesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ListResourcesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageNum: jspb.Message.getFieldWithDefault(msg, 2, 0),
    modelId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    modelName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    categoryId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    tags: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.ListResourcesRequest}
 */
proto.interactive3d_api.ListResourcesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.ListResourcesRequest;
  return proto.interactive3d_api.ListResourcesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.ListResourcesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.ListResourcesRequest}
 */
proto.interactive3d_api.ListResourcesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageNum(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setModelId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelName(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategoryId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.ListResourcesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.ListResourcesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.ListResourcesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ListResourcesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPageNum();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getModelId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getModelName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCategoryId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getTags();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional int32 page_size = 1;
 * @return {number}
 */
proto.interactive3d_api.ListResourcesRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.ListResourcesRequest} returns this
 */
proto.interactive3d_api.ListResourcesRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 page_num = 2;
 * @return {number}
 */
proto.interactive3d_api.ListResourcesRequest.prototype.getPageNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.ListResourcesRequest} returns this
 */
proto.interactive3d_api.ListResourcesRequest.prototype.setPageNum = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 model_id = 3;
 * @return {number}
 */
proto.interactive3d_api.ListResourcesRequest.prototype.getModelId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.ListResourcesRequest} returns this
 */
proto.interactive3d_api.ListResourcesRequest.prototype.setModelId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string model_name = 4;
 * @return {string}
 */
proto.interactive3d_api.ListResourcesRequest.prototype.getModelName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ListResourcesRequest} returns this
 */
proto.interactive3d_api.ListResourcesRequest.prototype.setModelName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 category_id = 5;
 * @return {number}
 */
proto.interactive3d_api.ListResourcesRequest.prototype.getCategoryId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.ListResourcesRequest} returns this
 */
proto.interactive3d_api.ListResourcesRequest.prototype.setCategoryId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string tags = 6;
 * @return {string}
 */
proto.interactive3d_api.ListResourcesRequest.prototype.getTags = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ListResourcesRequest} returns this
 */
proto.interactive3d_api.ListResourcesRequest.prototype.setTags = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.interactive3d_api.ResourcesItemRequest.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.ResourcesItemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.ResourcesItemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ResourcesItemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    modelName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    modelUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    modelSize: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    materials: jspb.Message.getFieldWithDefault(msg, 5, ""),
    previewImage: jspb.Message.getFieldWithDefault(msg, 6, ""),
    description: jspb.Message.getFieldWithDefault(msg, 7, ""),
    categoryIdsList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    categoryIdsName: jspb.Message.getFieldWithDefault(msg, 12, ""),
    tags: jspb.Message.getFieldWithDefault(msg, 9, ""),
    extendedProperties: jspb.Message.getFieldWithDefault(msg, 10, ""),
    createdTime: jspb.Message.getFieldWithDefault(msg, 11, ""),
    sourceType: jspb.Message.getFieldWithDefault(msg, 13, 0),
    assetTypeId: jspb.Message.getFieldWithDefault(msg, 14, 0),
    thirdPartyId: jspb.Message.getFieldWithDefault(msg, 15, ""),
    lod: jspb.Message.getFieldWithDefault(msg, 16, ""),
    defaultPackages: jspb.Message.getFieldWithDefault(msg, 17, ""),
    textureOption: jspb.Message.getFieldWithDefault(msg, 18, ""),
    resolutions: jspb.Message.getFieldWithDefault(msg, 19, ""),
    assetsFiles: jspb.Message.getFieldWithDefault(msg, 20, ""),
    packagesFiles: jspb.Message.getFieldWithDefault(msg, 21, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.ResourcesItemRequest}
 */
proto.interactive3d_api.ResourcesItemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.ResourcesItemRequest;
  return proto.interactive3d_api.ResourcesItemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.ResourcesItemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.ResourcesItemRequest}
 */
proto.interactive3d_api.ResourcesItemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setModelId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelUrl(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setModelSize(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaterials(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviewImage(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 8:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addCategoryIds(values[i]);
      }
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryIdsName(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTags(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setExtendedProperties(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedTime(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSourceType(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAssetTypeId(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setThirdPartyId(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setLod(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultPackages(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setTextureOption(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setResolutions(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetsFiles(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setPackagesFiles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.ResourcesItemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.ResourcesItemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ResourcesItemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getModelName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getModelUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getModelSize();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getMaterials();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPreviewImage();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCategoryIdsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      8,
      f
    );
  }
  f = message.getCategoryIdsName();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getTags();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getExtendedProperties();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCreatedTime();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSourceType();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getAssetTypeId();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getThirdPartyId();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getLod();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getDefaultPackages();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getTextureOption();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getResolutions();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getAssetsFiles();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getPackagesFiles();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
};


/**
 * optional int64 model_id = 1;
 * @return {number}
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.getModelId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.ResourcesItemRequest} returns this
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.setModelId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string model_name = 2;
 * @return {string}
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.getModelName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ResourcesItemRequest} returns this
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.setModelName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string model_url = 3;
 * @return {string}
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.getModelUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ResourcesItemRequest} returns this
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.setModelUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional float model_size = 4;
 * @return {number}
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.getModelSize = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.ResourcesItemRequest} returns this
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.setModelSize = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string materials = 5;
 * @return {string}
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.getMaterials = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ResourcesItemRequest} returns this
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.setMaterials = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string preview_image = 6;
 * @return {string}
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.getPreviewImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ResourcesItemRequest} returns this
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.setPreviewImage = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string description = 7;
 * @return {string}
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ResourcesItemRequest} returns this
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated int32 category_ids = 8;
 * @return {!Array<number>}
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.getCategoryIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.interactive3d_api.ResourcesItemRequest} returns this
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.setCategoryIdsList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.interactive3d_api.ResourcesItemRequest} returns this
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.addCategoryIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.interactive3d_api.ResourcesItemRequest} returns this
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.clearCategoryIdsList = function() {
  return this.setCategoryIdsList([]);
};


/**
 * optional string category_ids_name = 12;
 * @return {string}
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.getCategoryIdsName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ResourcesItemRequest} returns this
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.setCategoryIdsName = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string tags = 9;
 * @return {string}
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.getTags = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ResourcesItemRequest} returns this
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.setTags = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string extended_properties = 10;
 * @return {string}
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.getExtendedProperties = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ResourcesItemRequest} returns this
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.setExtendedProperties = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string created_time = 11;
 * @return {string}
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.getCreatedTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ResourcesItemRequest} returns this
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.setCreatedTime = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional int32 source_type = 13;
 * @return {number}
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.getSourceType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.ResourcesItemRequest} returns this
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.setSourceType = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 asset_type_id = 14;
 * @return {number}
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.getAssetTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.ResourcesItemRequest} returns this
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.setAssetTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional string third_party_id = 15;
 * @return {string}
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.getThirdPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ResourcesItemRequest} returns this
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.setThirdPartyId = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string lod = 16;
 * @return {string}
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.getLod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ResourcesItemRequest} returns this
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.setLod = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string default_packages = 17;
 * @return {string}
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.getDefaultPackages = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ResourcesItemRequest} returns this
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.setDefaultPackages = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string texture_option = 18;
 * @return {string}
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.getTextureOption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ResourcesItemRequest} returns this
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.setTextureOption = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string resolutions = 19;
 * @return {string}
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.getResolutions = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ResourcesItemRequest} returns this
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.setResolutions = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string assets_files = 20;
 * @return {string}
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.getAssetsFiles = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ResourcesItemRequest} returns this
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.setAssetsFiles = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string packages_files = 21;
 * @return {string}
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.getPackagesFiles = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ResourcesItemRequest} returns this
 */
proto.interactive3d_api.ResourcesItemRequest.prototype.setPackagesFiles = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.interactive3d_api.ListResourcesResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.ListResourcesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.ListResourcesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.ListResourcesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ListResourcesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    total: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    listList: jspb.Message.toObjectList(msg.getListList(),
    proto.interactive3d_api.ResourcesItemRequest.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.ListResourcesResponse}
 */
proto.interactive3d_api.ListResourcesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.ListResourcesResponse;
  return proto.interactive3d_api.ListResourcesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.ListResourcesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.ListResourcesResponse}
 */
proto.interactive3d_api.ListResourcesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setTotal(value);
      break;
    case 2:
      var value = new proto.interactive3d_api.ResourcesItemRequest;
      reader.readMessage(value,proto.interactive3d_api.ResourcesItemRequest.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.ListResourcesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.ListResourcesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.ListResourcesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ListResourcesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotal();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.interactive3d_api.ResourcesItemRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 total = 1;
 * @return {string}
 */
proto.interactive3d_api.ListResourcesResponse.prototype.getTotal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ListResourcesResponse} returns this
 */
proto.interactive3d_api.ListResourcesResponse.prototype.setTotal = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * repeated ResourcesItemRequest list = 2;
 * @return {!Array<!proto.interactive3d_api.ResourcesItemRequest>}
 */
proto.interactive3d_api.ListResourcesResponse.prototype.getListList = function() {
  return /** @type{!Array<!proto.interactive3d_api.ResourcesItemRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.interactive3d_api.ResourcesItemRequest, 2));
};


/**
 * @param {!Array<!proto.interactive3d_api.ResourcesItemRequest>} value
 * @return {!proto.interactive3d_api.ListResourcesResponse} returns this
*/
proto.interactive3d_api.ListResourcesResponse.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.interactive3d_api.ResourcesItemRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.interactive3d_api.ResourcesItemRequest}
 */
proto.interactive3d_api.ListResourcesResponse.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.interactive3d_api.ResourcesItemRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.interactive3d_api.ListResourcesResponse} returns this
 */
proto.interactive3d_api.ListResourcesResponse.prototype.clearListList = function() {
  return this.setListList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.interactive3d_api.CreateResourceRequest.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.CreateResourceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.CreateResourceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.CreateResourceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.CreateResourceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modelUrl: jspb.Message.getFieldWithDefault(msg, 2, ""),
    modelSize: jspb.Message.getFieldWithDefault(msg, 3, 0),
    materials: jspb.Message.getFieldWithDefault(msg, 4, ""),
    previewImage: jspb.Message.getFieldWithDefault(msg, 5, ""),
    description: jspb.Message.getFieldWithDefault(msg, 6, ""),
    categoryIdsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    assetTypeId: jspb.Message.getFieldWithDefault(msg, 8, 0),
    tags: jspb.Message.getFieldWithDefault(msg, 9, ""),
    extendedProperties: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.CreateResourceRequest}
 */
proto.interactive3d_api.CreateResourceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.CreateResourceRequest;
  return proto.interactive3d_api.CreateResourceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.CreateResourceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.CreateResourceRequest}
 */
proto.interactive3d_api.CreateResourceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelUrl(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setModelSize(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaterials(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviewImage(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addCategoryIds(values[i]);
      }
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAssetTypeId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTags(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setExtendedProperties(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.CreateResourceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.CreateResourceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.CreateResourceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.CreateResourceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModelUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getModelSize();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getMaterials();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPreviewImage();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCategoryIdsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      7,
      f
    );
  }
  f = message.getAssetTypeId();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getTags();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getExtendedProperties();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string model_name = 1;
 * @return {string}
 */
proto.interactive3d_api.CreateResourceRequest.prototype.getModelName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.CreateResourceRequest} returns this
 */
proto.interactive3d_api.CreateResourceRequest.prototype.setModelName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string model_url = 2;
 * @return {string}
 */
proto.interactive3d_api.CreateResourceRequest.prototype.getModelUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.CreateResourceRequest} returns this
 */
proto.interactive3d_api.CreateResourceRequest.prototype.setModelUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 model_size = 3;
 * @return {number}
 */
proto.interactive3d_api.CreateResourceRequest.prototype.getModelSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.CreateResourceRequest} returns this
 */
proto.interactive3d_api.CreateResourceRequest.prototype.setModelSize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string materials = 4;
 * @return {string}
 */
proto.interactive3d_api.CreateResourceRequest.prototype.getMaterials = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.CreateResourceRequest} returns this
 */
proto.interactive3d_api.CreateResourceRequest.prototype.setMaterials = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string preview_image = 5;
 * @return {string}
 */
proto.interactive3d_api.CreateResourceRequest.prototype.getPreviewImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.CreateResourceRequest} returns this
 */
proto.interactive3d_api.CreateResourceRequest.prototype.setPreviewImage = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.interactive3d_api.CreateResourceRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.CreateResourceRequest} returns this
 */
proto.interactive3d_api.CreateResourceRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated int32 category_ids = 7;
 * @return {!Array<number>}
 */
proto.interactive3d_api.CreateResourceRequest.prototype.getCategoryIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.interactive3d_api.CreateResourceRequest} returns this
 */
proto.interactive3d_api.CreateResourceRequest.prototype.setCategoryIdsList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.interactive3d_api.CreateResourceRequest} returns this
 */
proto.interactive3d_api.CreateResourceRequest.prototype.addCategoryIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.interactive3d_api.CreateResourceRequest} returns this
 */
proto.interactive3d_api.CreateResourceRequest.prototype.clearCategoryIdsList = function() {
  return this.setCategoryIdsList([]);
};


/**
 * optional int32 asset_type_id = 8;
 * @return {number}
 */
proto.interactive3d_api.CreateResourceRequest.prototype.getAssetTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.CreateResourceRequest} returns this
 */
proto.interactive3d_api.CreateResourceRequest.prototype.setAssetTypeId = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string tags = 9;
 * @return {string}
 */
proto.interactive3d_api.CreateResourceRequest.prototype.getTags = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.CreateResourceRequest} returns this
 */
proto.interactive3d_api.CreateResourceRequest.prototype.setTags = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string extended_properties = 10;
 * @return {string}
 */
proto.interactive3d_api.CreateResourceRequest.prototype.getExtendedProperties = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.CreateResourceRequest} returns this
 */
proto.interactive3d_api.CreateResourceRequest.prototype.setExtendedProperties = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.CreateResourceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.CreateResourceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.CreateResourceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.CreateResourceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.CreateResourceResponse}
 */
proto.interactive3d_api.CreateResourceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.CreateResourceResponse;
  return proto.interactive3d_api.CreateResourceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.CreateResourceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.CreateResourceResponse}
 */
proto.interactive3d_api.CreateResourceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setModelId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.CreateResourceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.CreateResourceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.CreateResourceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.CreateResourceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 model_id = 1;
 * @return {number}
 */
proto.interactive3d_api.CreateResourceResponse.prototype.getModelId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.CreateResourceResponse} returns this
 */
proto.interactive3d_api.CreateResourceResponse.prototype.setModelId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.DeleteResourceByModelIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.DeleteResourceByModelIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.DeleteResourceByModelIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.DeleteResourceByModelIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.DeleteResourceByModelIdRequest}
 */
proto.interactive3d_api.DeleteResourceByModelIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.DeleteResourceByModelIdRequest;
  return proto.interactive3d_api.DeleteResourceByModelIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.DeleteResourceByModelIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.DeleteResourceByModelIdRequest}
 */
proto.interactive3d_api.DeleteResourceByModelIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setModelId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.DeleteResourceByModelIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.DeleteResourceByModelIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.DeleteResourceByModelIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.DeleteResourceByModelIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 model_id = 1;
 * @return {number}
 */
proto.interactive3d_api.DeleteResourceByModelIdRequest.prototype.getModelId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.DeleteResourceByModelIdRequest} returns this
 */
proto.interactive3d_api.DeleteResourceByModelIdRequest.prototype.setModelId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.interactive3d_api.UpdateResourceRequest.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.UpdateResourceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.UpdateResourceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.UpdateResourceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.UpdateResourceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    modelName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    modelUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    modelSize: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    materials: jspb.Message.getFieldWithDefault(msg, 5, ""),
    previewImage: jspb.Message.getFieldWithDefault(msg, 6, ""),
    description: jspb.Message.getFieldWithDefault(msg, 7, ""),
    categoryIdsList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    tags: jspb.Message.getFieldWithDefault(msg, 9, ""),
    extendedProperties: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.UpdateResourceRequest}
 */
proto.interactive3d_api.UpdateResourceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.UpdateResourceRequest;
  return proto.interactive3d_api.UpdateResourceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.UpdateResourceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.UpdateResourceRequest}
 */
proto.interactive3d_api.UpdateResourceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setModelId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelUrl(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setModelSize(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaterials(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviewImage(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 8:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addCategoryIds(values[i]);
      }
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTags(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setExtendedProperties(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.UpdateResourceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.UpdateResourceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.UpdateResourceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.UpdateResourceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getModelName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getModelUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getModelSize();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getMaterials();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPreviewImage();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCategoryIdsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      8,
      f
    );
  }
  f = message.getTags();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getExtendedProperties();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional int64 model_id = 1;
 * @return {number}
 */
proto.interactive3d_api.UpdateResourceRequest.prototype.getModelId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.UpdateResourceRequest} returns this
 */
proto.interactive3d_api.UpdateResourceRequest.prototype.setModelId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string model_name = 2;
 * @return {string}
 */
proto.interactive3d_api.UpdateResourceRequest.prototype.getModelName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.UpdateResourceRequest} returns this
 */
proto.interactive3d_api.UpdateResourceRequest.prototype.setModelName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string model_url = 3;
 * @return {string}
 */
proto.interactive3d_api.UpdateResourceRequest.prototype.getModelUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.UpdateResourceRequest} returns this
 */
proto.interactive3d_api.UpdateResourceRequest.prototype.setModelUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional float model_size = 4;
 * @return {number}
 */
proto.interactive3d_api.UpdateResourceRequest.prototype.getModelSize = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.UpdateResourceRequest} returns this
 */
proto.interactive3d_api.UpdateResourceRequest.prototype.setModelSize = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string materials = 5;
 * @return {string}
 */
proto.interactive3d_api.UpdateResourceRequest.prototype.getMaterials = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.UpdateResourceRequest} returns this
 */
proto.interactive3d_api.UpdateResourceRequest.prototype.setMaterials = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string preview_image = 6;
 * @return {string}
 */
proto.interactive3d_api.UpdateResourceRequest.prototype.getPreviewImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.UpdateResourceRequest} returns this
 */
proto.interactive3d_api.UpdateResourceRequest.prototype.setPreviewImage = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string description = 7;
 * @return {string}
 */
proto.interactive3d_api.UpdateResourceRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.UpdateResourceRequest} returns this
 */
proto.interactive3d_api.UpdateResourceRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated int32 category_ids = 8;
 * @return {!Array<number>}
 */
proto.interactive3d_api.UpdateResourceRequest.prototype.getCategoryIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.interactive3d_api.UpdateResourceRequest} returns this
 */
proto.interactive3d_api.UpdateResourceRequest.prototype.setCategoryIdsList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.interactive3d_api.UpdateResourceRequest} returns this
 */
proto.interactive3d_api.UpdateResourceRequest.prototype.addCategoryIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.interactive3d_api.UpdateResourceRequest} returns this
 */
proto.interactive3d_api.UpdateResourceRequest.prototype.clearCategoryIdsList = function() {
  return this.setCategoryIdsList([]);
};


/**
 * optional string tags = 9;
 * @return {string}
 */
proto.interactive3d_api.UpdateResourceRequest.prototype.getTags = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.UpdateResourceRequest} returns this
 */
proto.interactive3d_api.UpdateResourceRequest.prototype.setTags = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string extended_properties = 10;
 * @return {string}
 */
proto.interactive3d_api.UpdateResourceRequest.prototype.getExtendedProperties = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.UpdateResourceRequest} returns this
 */
proto.interactive3d_api.UpdateResourceRequest.prototype.setExtendedProperties = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.CreateResourceUrlRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.CreateResourceUrlRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.CreateResourceUrlRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.CreateResourceUrlRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    concurrent: jspb.Message.getFieldWithDefault(msg, 2, 0),
    startTime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    endTime: jspb.Message.getFieldWithDefault(msg, 4, 0),
    pwd: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.CreateResourceUrlRequest}
 */
proto.interactive3d_api.CreateResourceUrlRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.CreateResourceUrlRequest;
  return proto.interactive3d_api.CreateResourceUrlRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.CreateResourceUrlRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.CreateResourceUrlRequest}
 */
proto.interactive3d_api.CreateResourceUrlRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setModelId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setConcurrent(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartTime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndTime(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPwd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.CreateResourceUrlRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.CreateResourceUrlRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.CreateResourceUrlRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.CreateResourceUrlRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getConcurrent();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getStartTime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getEndTime();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getPwd();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional int64 model_id = 1;
 * @return {number}
 */
proto.interactive3d_api.CreateResourceUrlRequest.prototype.getModelId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.CreateResourceUrlRequest} returns this
 */
proto.interactive3d_api.CreateResourceUrlRequest.prototype.setModelId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 concurrent = 2;
 * @return {number}
 */
proto.interactive3d_api.CreateResourceUrlRequest.prototype.getConcurrent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.CreateResourceUrlRequest} returns this
 */
proto.interactive3d_api.CreateResourceUrlRequest.prototype.setConcurrent = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 start_time = 3;
 * @return {number}
 */
proto.interactive3d_api.CreateResourceUrlRequest.prototype.getStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.CreateResourceUrlRequest} returns this
 */
proto.interactive3d_api.CreateResourceUrlRequest.prototype.setStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 end_time = 4;
 * @return {number}
 */
proto.interactive3d_api.CreateResourceUrlRequest.prototype.getEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.CreateResourceUrlRequest} returns this
 */
proto.interactive3d_api.CreateResourceUrlRequest.prototype.setEndTime = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string pwd = 5;
 * @return {string}
 */
proto.interactive3d_api.CreateResourceUrlRequest.prototype.getPwd = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.CreateResourceUrlRequest} returns this
 */
proto.interactive3d_api.CreateResourceUrlRequest.prototype.setPwd = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.CreateResourceUrlResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.CreateResourceUrlResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.CreateResourceUrlResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.CreateResourceUrlResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    url: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.CreateResourceUrlResponse}
 */
proto.interactive3d_api.CreateResourceUrlResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.CreateResourceUrlResponse;
  return proto.interactive3d_api.CreateResourceUrlResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.CreateResourceUrlResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.CreateResourceUrlResponse}
 */
proto.interactive3d_api.CreateResourceUrlResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.CreateResourceUrlResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.CreateResourceUrlResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.CreateResourceUrlResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.CreateResourceUrlResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.interactive3d_api.CreateResourceUrlResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.CreateResourceUrlResponse} returns this
 */
proto.interactive3d_api.CreateResourceUrlResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string url = 2;
 * @return {string}
 */
proto.interactive3d_api.CreateResourceUrlResponse.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.CreateResourceUrlResponse} returns this
 */
proto.interactive3d_api.CreateResourceUrlResponse.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.GetResourceUrlInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.GetResourceUrlInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.GetResourceUrlInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.GetResourceUrlInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.GetResourceUrlInfoRequest}
 */
proto.interactive3d_api.GetResourceUrlInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.GetResourceUrlInfoRequest;
  return proto.interactive3d_api.GetResourceUrlInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.GetResourceUrlInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.GetResourceUrlInfoRequest}
 */
proto.interactive3d_api.GetResourceUrlInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.GetResourceUrlInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.GetResourceUrlInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.GetResourceUrlInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.GetResourceUrlInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string url = 2;
 * @return {string}
 */
proto.interactive3d_api.GetResourceUrlInfoRequest.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.GetResourceUrlInfoRequest} returns this
 */
proto.interactive3d_api.GetResourceUrlInfoRequest.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.ResourceUrlsItemResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.ResourceUrlsItemResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.ResourceUrlsItemResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ResourceUrlsItemResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    modelId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    concurrent: jspb.Message.getFieldWithDefault(msg, 3, 0),
    startTime: jspb.Message.getFieldWithDefault(msg, 4, ""),
    endTime: jspb.Message.getFieldWithDefault(msg, 5, ""),
    url: jspb.Message.getFieldWithDefault(msg, 6, ""),
    isPwd: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.ResourceUrlsItemResponse}
 */
proto.interactive3d_api.ResourceUrlsItemResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.ResourceUrlsItemResponse;
  return proto.interactive3d_api.ResourceUrlsItemResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.ResourceUrlsItemResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.ResourceUrlsItemResponse}
 */
proto.interactive3d_api.ResourceUrlsItemResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setModelId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setConcurrent(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartTime(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndTime(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPwd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.ResourceUrlsItemResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.ResourceUrlsItemResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.ResourceUrlsItemResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ResourceUrlsItemResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getModelId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getConcurrent();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getStartTime();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEndTime();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIsPwd();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.interactive3d_api.ResourceUrlsItemResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.ResourceUrlsItemResponse} returns this
 */
proto.interactive3d_api.ResourceUrlsItemResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 model_id = 2;
 * @return {number}
 */
proto.interactive3d_api.ResourceUrlsItemResponse.prototype.getModelId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.ResourceUrlsItemResponse} returns this
 */
proto.interactive3d_api.ResourceUrlsItemResponse.prototype.setModelId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 concurrent = 3;
 * @return {number}
 */
proto.interactive3d_api.ResourceUrlsItemResponse.prototype.getConcurrent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.ResourceUrlsItemResponse} returns this
 */
proto.interactive3d_api.ResourceUrlsItemResponse.prototype.setConcurrent = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string start_time = 4;
 * @return {string}
 */
proto.interactive3d_api.ResourceUrlsItemResponse.prototype.getStartTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ResourceUrlsItemResponse} returns this
 */
proto.interactive3d_api.ResourceUrlsItemResponse.prototype.setStartTime = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string end_time = 5;
 * @return {string}
 */
proto.interactive3d_api.ResourceUrlsItemResponse.prototype.getEndTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ResourceUrlsItemResponse} returns this
 */
proto.interactive3d_api.ResourceUrlsItemResponse.prototype.setEndTime = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.interactive3d_api.ResourceUrlsItemResponse.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ResourceUrlsItemResponse} returns this
 */
proto.interactive3d_api.ResourceUrlsItemResponse.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool is_pwd = 7;
 * @return {boolean}
 */
proto.interactive3d_api.ResourceUrlsItemResponse.prototype.getIsPwd = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.interactive3d_api.ResourceUrlsItemResponse} returns this
 */
proto.interactive3d_api.ResourceUrlsItemResponse.prototype.setIsPwd = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.GetResourceUrlInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.GetResourceUrlInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.GetResourceUrlInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.GetResourceUrlInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    info: (f = msg.getInfo()) && proto.interactive3d_api.ResourceUrlsItemResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.GetResourceUrlInfoResponse}
 */
proto.interactive3d_api.GetResourceUrlInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.GetResourceUrlInfoResponse;
  return proto.interactive3d_api.GetResourceUrlInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.GetResourceUrlInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.GetResourceUrlInfoResponse}
 */
proto.interactive3d_api.GetResourceUrlInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.interactive3d_api.ResourceUrlsItemResponse;
      reader.readMessage(value,proto.interactive3d_api.ResourceUrlsItemResponse.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.GetResourceUrlInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.GetResourceUrlInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.GetResourceUrlInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.GetResourceUrlInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.interactive3d_api.ResourceUrlsItemResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResourceUrlsItemResponse info = 1;
 * @return {?proto.interactive3d_api.ResourceUrlsItemResponse}
 */
proto.interactive3d_api.GetResourceUrlInfoResponse.prototype.getInfo = function() {
  return /** @type{?proto.interactive3d_api.ResourceUrlsItemResponse} */ (
    jspb.Message.getWrapperField(this, proto.interactive3d_api.ResourceUrlsItemResponse, 1));
};


/**
 * @param {?proto.interactive3d_api.ResourceUrlsItemResponse|undefined} value
 * @return {!proto.interactive3d_api.GetResourceUrlInfoResponse} returns this
*/
proto.interactive3d_api.GetResourceUrlInfoResponse.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.interactive3d_api.GetResourceUrlInfoResponse} returns this
 */
proto.interactive3d_api.GetResourceUrlInfoResponse.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.interactive3d_api.GetResourceUrlInfoResponse.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.UpdateResourceUrlRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.UpdateResourceUrlRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.UpdateResourceUrlRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.UpdateResourceUrlRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    concurrent: jspb.Message.getFieldWithDefault(msg, 2, 0),
    startTime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    endTime: jspb.Message.getFieldWithDefault(msg, 4, 0),
    pwd: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.UpdateResourceUrlRequest}
 */
proto.interactive3d_api.UpdateResourceUrlRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.UpdateResourceUrlRequest;
  return proto.interactive3d_api.UpdateResourceUrlRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.UpdateResourceUrlRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.UpdateResourceUrlRequest}
 */
proto.interactive3d_api.UpdateResourceUrlRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setConcurrent(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartTime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndTime(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPwd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.UpdateResourceUrlRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.UpdateResourceUrlRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.UpdateResourceUrlRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.UpdateResourceUrlRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getConcurrent();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getStartTime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getEndTime();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getPwd();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.interactive3d_api.UpdateResourceUrlRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.UpdateResourceUrlRequest} returns this
 */
proto.interactive3d_api.UpdateResourceUrlRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 concurrent = 2;
 * @return {number}
 */
proto.interactive3d_api.UpdateResourceUrlRequest.prototype.getConcurrent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.UpdateResourceUrlRequest} returns this
 */
proto.interactive3d_api.UpdateResourceUrlRequest.prototype.setConcurrent = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 start_time = 3;
 * @return {number}
 */
proto.interactive3d_api.UpdateResourceUrlRequest.prototype.getStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.UpdateResourceUrlRequest} returns this
 */
proto.interactive3d_api.UpdateResourceUrlRequest.prototype.setStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 end_time = 4;
 * @return {number}
 */
proto.interactive3d_api.UpdateResourceUrlRequest.prototype.getEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.UpdateResourceUrlRequest} returns this
 */
proto.interactive3d_api.UpdateResourceUrlRequest.prototype.setEndTime = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string pwd = 5;
 * @return {string}
 */
proto.interactive3d_api.UpdateResourceUrlRequest.prototype.getPwd = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.UpdateResourceUrlRequest} returns this
 */
proto.interactive3d_api.UpdateResourceUrlRequest.prototype.setPwd = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.ListResourceUrlRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.ListResourceUrlRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.ListResourceUrlRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ListResourceUrlRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageNum: jspb.Message.getFieldWithDefault(msg, 2, 0),
    modelId: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.ListResourceUrlRequest}
 */
proto.interactive3d_api.ListResourceUrlRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.ListResourceUrlRequest;
  return proto.interactive3d_api.ListResourceUrlRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.ListResourceUrlRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.ListResourceUrlRequest}
 */
proto.interactive3d_api.ListResourceUrlRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageNum(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setModelId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.ListResourceUrlRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.ListResourceUrlRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.ListResourceUrlRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ListResourceUrlRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPageNum();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getModelId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional int32 page_size = 1;
 * @return {number}
 */
proto.interactive3d_api.ListResourceUrlRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.ListResourceUrlRequest} returns this
 */
proto.interactive3d_api.ListResourceUrlRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 page_num = 2;
 * @return {number}
 */
proto.interactive3d_api.ListResourceUrlRequest.prototype.getPageNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.ListResourceUrlRequest} returns this
 */
proto.interactive3d_api.ListResourceUrlRequest.prototype.setPageNum = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 model_id = 3;
 * @return {number}
 */
proto.interactive3d_api.ListResourceUrlRequest.prototype.getModelId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.ListResourceUrlRequest} returns this
 */
proto.interactive3d_api.ListResourceUrlRequest.prototype.setModelId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.ResourceUrlsItemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.ResourceUrlsItemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.ResourceUrlsItemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ResourceUrlsItemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    concurrent: jspb.Message.getFieldWithDefault(msg, 2, 0),
    startTime: jspb.Message.getFieldWithDefault(msg, 3, ""),
    endTime: jspb.Message.getFieldWithDefault(msg, 4, ""),
    url: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.ResourceUrlsItemRequest}
 */
proto.interactive3d_api.ResourceUrlsItemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.ResourceUrlsItemRequest;
  return proto.interactive3d_api.ResourceUrlsItemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.ResourceUrlsItemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.ResourceUrlsItemRequest}
 */
proto.interactive3d_api.ResourceUrlsItemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setConcurrent(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartTime(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndTime(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.ResourceUrlsItemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.ResourceUrlsItemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.ResourceUrlsItemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ResourceUrlsItemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getConcurrent();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getStartTime();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEndTime();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.interactive3d_api.ResourceUrlsItemRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.ResourceUrlsItemRequest} returns this
 */
proto.interactive3d_api.ResourceUrlsItemRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 concurrent = 2;
 * @return {number}
 */
proto.interactive3d_api.ResourceUrlsItemRequest.prototype.getConcurrent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.ResourceUrlsItemRequest} returns this
 */
proto.interactive3d_api.ResourceUrlsItemRequest.prototype.setConcurrent = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string start_time = 3;
 * @return {string}
 */
proto.interactive3d_api.ResourceUrlsItemRequest.prototype.getStartTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ResourceUrlsItemRequest} returns this
 */
proto.interactive3d_api.ResourceUrlsItemRequest.prototype.setStartTime = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string end_time = 4;
 * @return {string}
 */
proto.interactive3d_api.ResourceUrlsItemRequest.prototype.getEndTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ResourceUrlsItemRequest} returns this
 */
proto.interactive3d_api.ResourceUrlsItemRequest.prototype.setEndTime = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string url = 5;
 * @return {string}
 */
proto.interactive3d_api.ResourceUrlsItemRequest.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ResourceUrlsItemRequest} returns this
 */
proto.interactive3d_api.ResourceUrlsItemRequest.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.interactive3d_api.ListResourceUrlResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.ListResourceUrlResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.ListResourceUrlResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.ListResourceUrlResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ListResourceUrlResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    listList: jspb.Message.toObjectList(msg.getListList(),
    proto.interactive3d_api.ResourceUrlsItemResponse.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.ListResourceUrlResponse}
 */
proto.interactive3d_api.ListResourceUrlResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.ListResourceUrlResponse;
  return proto.interactive3d_api.ListResourceUrlResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.ListResourceUrlResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.ListResourceUrlResponse}
 */
proto.interactive3d_api.ListResourceUrlResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.interactive3d_api.ResourceUrlsItemResponse;
      reader.readMessage(value,proto.interactive3d_api.ResourceUrlsItemResponse.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.ListResourceUrlResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.ListResourceUrlResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.ListResourceUrlResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ListResourceUrlResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.interactive3d_api.ResourceUrlsItemResponse.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * repeated ResourceUrlsItemResponse list = 1;
 * @return {!Array<!proto.interactive3d_api.ResourceUrlsItemResponse>}
 */
proto.interactive3d_api.ListResourceUrlResponse.prototype.getListList = function() {
  return /** @type{!Array<!proto.interactive3d_api.ResourceUrlsItemResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.interactive3d_api.ResourceUrlsItemResponse, 1));
};


/**
 * @param {!Array<!proto.interactive3d_api.ResourceUrlsItemResponse>} value
 * @return {!proto.interactive3d_api.ListResourceUrlResponse} returns this
*/
proto.interactive3d_api.ListResourceUrlResponse.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.interactive3d_api.ResourceUrlsItemResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.interactive3d_api.ResourceUrlsItemResponse}
 */
proto.interactive3d_api.ListResourceUrlResponse.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.interactive3d_api.ResourceUrlsItemResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.interactive3d_api.ListResourceUrlResponse} returns this
 */
proto.interactive3d_api.ListResourceUrlResponse.prototype.clearListList = function() {
  return this.setListList([]);
};


/**
 * optional int64 total = 2;
 * @return {number}
 */
proto.interactive3d_api.ListResourceUrlResponse.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.ListResourceUrlResponse} returns this
 */
proto.interactive3d_api.ListResourceUrlResponse.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.DeleteResourceUrlRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.DeleteResourceUrlRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.DeleteResourceUrlRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.DeleteResourceUrlRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.DeleteResourceUrlRequest}
 */
proto.interactive3d_api.DeleteResourceUrlRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.DeleteResourceUrlRequest;
  return proto.interactive3d_api.DeleteResourceUrlRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.DeleteResourceUrlRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.DeleteResourceUrlRequest}
 */
proto.interactive3d_api.DeleteResourceUrlRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setModelId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.DeleteResourceUrlRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.DeleteResourceUrlRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.DeleteResourceUrlRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.DeleteResourceUrlRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 model_id = 2;
 * @return {number}
 */
proto.interactive3d_api.DeleteResourceUrlRequest.prototype.getModelId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.DeleteResourceUrlRequest} returns this
 */
proto.interactive3d_api.DeleteResourceUrlRequest.prototype.setModelId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.ValidResourceUrlRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.ValidResourceUrlRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.ValidResourceUrlRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ValidResourceUrlRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pwd: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.ValidResourceUrlRequest}
 */
proto.interactive3d_api.ValidResourceUrlRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.ValidResourceUrlRequest;
  return proto.interactive3d_api.ValidResourceUrlRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.ValidResourceUrlRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.ValidResourceUrlRequest}
 */
proto.interactive3d_api.ValidResourceUrlRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPwd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.ValidResourceUrlRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.ValidResourceUrlRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.ValidResourceUrlRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ValidResourceUrlRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPwd();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.interactive3d_api.ValidResourceUrlRequest.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ValidResourceUrlRequest} returns this
 */
proto.interactive3d_api.ValidResourceUrlRequest.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string pwd = 2;
 * @return {string}
 */
proto.interactive3d_api.ValidResourceUrlRequest.prototype.getPwd = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ValidResourceUrlRequest} returns this
 */
proto.interactive3d_api.ValidResourceUrlRequest.prototype.setPwd = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.ValidResourceUrlResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.ValidResourceUrlResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.ValidResourceUrlResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ValidResourceUrlResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    valid: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    modelUrl: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.ValidResourceUrlResponse}
 */
proto.interactive3d_api.ValidResourceUrlResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.ValidResourceUrlResponse;
  return proto.interactive3d_api.ValidResourceUrlResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.ValidResourceUrlResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.ValidResourceUrlResponse}
 */
proto.interactive3d_api.ValidResourceUrlResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.ValidResourceUrlResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.ValidResourceUrlResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.ValidResourceUrlResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ValidResourceUrlResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValid();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getModelUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool valid = 1;
 * @return {boolean}
 */
proto.interactive3d_api.ValidResourceUrlResponse.prototype.getValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.interactive3d_api.ValidResourceUrlResponse} returns this
 */
proto.interactive3d_api.ValidResourceUrlResponse.prototype.setValid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string model_url = 2;
 * @return {string}
 */
proto.interactive3d_api.ValidResourceUrlResponse.prototype.getModelUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ValidResourceUrlResponse} returns this
 */
proto.interactive3d_api.ValidResourceUrlResponse.prototype.setModelUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.GetResourceInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.GetResourceInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.GetResourceInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.GetResourceInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.GetResourceInfoRequest}
 */
proto.interactive3d_api.GetResourceInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.GetResourceInfoRequest;
  return proto.interactive3d_api.GetResourceInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.GetResourceInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.GetResourceInfoRequest}
 */
proto.interactive3d_api.GetResourceInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setModelId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.GetResourceInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.GetResourceInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.GetResourceInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.GetResourceInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 model_id = 1;
 * @return {number}
 */
proto.interactive3d_api.GetResourceInfoRequest.prototype.getModelId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.GetResourceInfoRequest} returns this
 */
proto.interactive3d_api.GetResourceInfoRequest.prototype.setModelId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.GetResourceInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.GetResourceInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.GetResourceInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.GetResourceInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    info: (f = msg.getInfo()) && proto.interactive3d_api.ResourcesItemRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.GetResourceInfoResponse}
 */
proto.interactive3d_api.GetResourceInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.GetResourceInfoResponse;
  return proto.interactive3d_api.GetResourceInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.GetResourceInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.GetResourceInfoResponse}
 */
proto.interactive3d_api.GetResourceInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.interactive3d_api.ResourcesItemRequest;
      reader.readMessage(value,proto.interactive3d_api.ResourcesItemRequest.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.GetResourceInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.GetResourceInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.GetResourceInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.GetResourceInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.interactive3d_api.ResourcesItemRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResourcesItemRequest info = 1;
 * @return {?proto.interactive3d_api.ResourcesItemRequest}
 */
proto.interactive3d_api.GetResourceInfoResponse.prototype.getInfo = function() {
  return /** @type{?proto.interactive3d_api.ResourcesItemRequest} */ (
    jspb.Message.getWrapperField(this, proto.interactive3d_api.ResourcesItemRequest, 1));
};


/**
 * @param {?proto.interactive3d_api.ResourcesItemRequest|undefined} value
 * @return {!proto.interactive3d_api.GetResourceInfoResponse} returns this
*/
proto.interactive3d_api.GetResourceInfoResponse.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.interactive3d_api.GetResourceInfoResponse} returns this
 */
proto.interactive3d_api.GetResourceInfoResponse.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.interactive3d_api.GetResourceInfoResponse.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.ListCategoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.ListCategoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.ListCategoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ListCategoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.ListCategoryRequest}
 */
proto.interactive3d_api.ListCategoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.ListCategoryRequest;
  return proto.interactive3d_api.ListCategoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.ListCategoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.ListCategoryRequest}
 */
proto.interactive3d_api.ListCategoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.ListCategoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.ListCategoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.ListCategoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ListCategoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.interactive3d_api.CategoryItemResponse.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.CategoryItemResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.CategoryItemResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.CategoryItemResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.CategoryItemResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    categoryId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    parentId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    nameEn: jspb.Message.getFieldWithDefault(msg, 4, ""),
    level: jspb.Message.getFieldWithDefault(msg, 5, 0),
    path: jspb.Message.getFieldWithDefault(msg, 6, ""),
    childList: jspb.Message.toObjectList(msg.getChildList(),
    proto.interactive3d_api.CategoryItemResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.CategoryItemResponse}
 */
proto.interactive3d_api.CategoryItemResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.CategoryItemResponse;
  return proto.interactive3d_api.CategoryItemResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.CategoryItemResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.CategoryItemResponse}
 */
proto.interactive3d_api.CategoryItemResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCategoryId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParentId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNameEn(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLevel(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 7:
      var value = new proto.interactive3d_api.CategoryItemResponse;
      reader.readMessage(value,proto.interactive3d_api.CategoryItemResponse.deserializeBinaryFromReader);
      msg.addChild(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.CategoryItemResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.CategoryItemResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.CategoryItemResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.CategoryItemResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategoryId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getParentId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNameEn();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLevel();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getChildList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.interactive3d_api.CategoryItemResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 category_id = 1;
 * @return {number}
 */
proto.interactive3d_api.CategoryItemResponse.prototype.getCategoryId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.CategoryItemResponse} returns this
 */
proto.interactive3d_api.CategoryItemResponse.prototype.setCategoryId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 parent_id = 2;
 * @return {number}
 */
proto.interactive3d_api.CategoryItemResponse.prototype.getParentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.CategoryItemResponse} returns this
 */
proto.interactive3d_api.CategoryItemResponse.prototype.setParentId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.interactive3d_api.CategoryItemResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.CategoryItemResponse} returns this
 */
proto.interactive3d_api.CategoryItemResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name_en = 4;
 * @return {string}
 */
proto.interactive3d_api.CategoryItemResponse.prototype.getNameEn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.CategoryItemResponse} returns this
 */
proto.interactive3d_api.CategoryItemResponse.prototype.setNameEn = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 level = 5;
 * @return {number}
 */
proto.interactive3d_api.CategoryItemResponse.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.CategoryItemResponse} returns this
 */
proto.interactive3d_api.CategoryItemResponse.prototype.setLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string path = 6;
 * @return {string}
 */
proto.interactive3d_api.CategoryItemResponse.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.CategoryItemResponse} returns this
 */
proto.interactive3d_api.CategoryItemResponse.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated CategoryItemResponse child = 7;
 * @return {!Array<!proto.interactive3d_api.CategoryItemResponse>}
 */
proto.interactive3d_api.CategoryItemResponse.prototype.getChildList = function() {
  return /** @type{!Array<!proto.interactive3d_api.CategoryItemResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.interactive3d_api.CategoryItemResponse, 7));
};


/**
 * @param {!Array<!proto.interactive3d_api.CategoryItemResponse>} value
 * @return {!proto.interactive3d_api.CategoryItemResponse} returns this
*/
proto.interactive3d_api.CategoryItemResponse.prototype.setChildList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.interactive3d_api.CategoryItemResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.interactive3d_api.CategoryItemResponse}
 */
proto.interactive3d_api.CategoryItemResponse.prototype.addChild = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.interactive3d_api.CategoryItemResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.interactive3d_api.CategoryItemResponse} returns this
 */
proto.interactive3d_api.CategoryItemResponse.prototype.clearChildList = function() {
  return this.setChildList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.interactive3d_api.ListCategoryResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.ListCategoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.ListCategoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.ListCategoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ListCategoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    listList: jspb.Message.toObjectList(msg.getListList(),
    proto.interactive3d_api.CategoryItemResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.ListCategoryResponse}
 */
proto.interactive3d_api.ListCategoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.ListCategoryResponse;
  return proto.interactive3d_api.ListCategoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.ListCategoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.ListCategoryResponse}
 */
proto.interactive3d_api.ListCategoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.interactive3d_api.CategoryItemResponse;
      reader.readMessage(value,proto.interactive3d_api.CategoryItemResponse.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.ListCategoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.ListCategoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.ListCategoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ListCategoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.interactive3d_api.CategoryItemResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CategoryItemResponse list = 1;
 * @return {!Array<!proto.interactive3d_api.CategoryItemResponse>}
 */
proto.interactive3d_api.ListCategoryResponse.prototype.getListList = function() {
  return /** @type{!Array<!proto.interactive3d_api.CategoryItemResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.interactive3d_api.CategoryItemResponse, 1));
};


/**
 * @param {!Array<!proto.interactive3d_api.CategoryItemResponse>} value
 * @return {!proto.interactive3d_api.ListCategoryResponse} returns this
*/
proto.interactive3d_api.ListCategoryResponse.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.interactive3d_api.CategoryItemResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.interactive3d_api.CategoryItemResponse}
 */
proto.interactive3d_api.ListCategoryResponse.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.interactive3d_api.CategoryItemResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.interactive3d_api.ListCategoryResponse} returns this
 */
proto.interactive3d_api.ListCategoryResponse.prototype.clearListList = function() {
  return this.setListList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.interactive3d_api.ListAssetsRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.ListAssetsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.ListAssetsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.ListAssetsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ListAssetsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageNum: jspb.Message.getFieldWithDefault(msg, 2, 0),
    assetIdName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    assetTypeIdsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    assetStatus: jspb.Message.getFieldWithDefault(msg, 5, 0),
    assetNature: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.ListAssetsRequest}
 */
proto.interactive3d_api.ListAssetsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.ListAssetsRequest;
  return proto.interactive3d_api.ListAssetsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.ListAssetsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.ListAssetsRequest}
 */
proto.interactive3d_api.ListAssetsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPageSize(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPageNum(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetIdName(value);
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addAssetTypeIds(values[i]);
      }
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAssetStatus(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAssetNature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.ListAssetsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.ListAssetsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.ListAssetsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ListAssetsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPageNum();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getAssetIdName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAssetTypeIdsList();
  if (f.length > 0) {
    writer.writePackedInt64(
      4,
      f
    );
  }
  f = message.getAssetStatus();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getAssetNature();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
};


/**
 * optional int64 page_size = 1;
 * @return {number}
 */
proto.interactive3d_api.ListAssetsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.ListAssetsRequest} returns this
 */
proto.interactive3d_api.ListAssetsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 page_num = 2;
 * @return {number}
 */
proto.interactive3d_api.ListAssetsRequest.prototype.getPageNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.ListAssetsRequest} returns this
 */
proto.interactive3d_api.ListAssetsRequest.prototype.setPageNum = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string asset_id_name = 3;
 * @return {string}
 */
proto.interactive3d_api.ListAssetsRequest.prototype.getAssetIdName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ListAssetsRequest} returns this
 */
proto.interactive3d_api.ListAssetsRequest.prototype.setAssetIdName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated int64 asset_type_ids = 4;
 * @return {!Array<number>}
 */
proto.interactive3d_api.ListAssetsRequest.prototype.getAssetTypeIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.interactive3d_api.ListAssetsRequest} returns this
 */
proto.interactive3d_api.ListAssetsRequest.prototype.setAssetTypeIdsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.interactive3d_api.ListAssetsRequest} returns this
 */
proto.interactive3d_api.ListAssetsRequest.prototype.addAssetTypeIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.interactive3d_api.ListAssetsRequest} returns this
 */
proto.interactive3d_api.ListAssetsRequest.prototype.clearAssetTypeIdsList = function() {
  return this.setAssetTypeIdsList([]);
};


/**
 * optional int64 asset_status = 5;
 * @return {number}
 */
proto.interactive3d_api.ListAssetsRequest.prototype.getAssetStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.ListAssetsRequest} returns this
 */
proto.interactive3d_api.ListAssetsRequest.prototype.setAssetStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 asset_nature = 6;
 * @return {number}
 */
proto.interactive3d_api.ListAssetsRequest.prototype.getAssetNature = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.ListAssetsRequest} returns this
 */
proto.interactive3d_api.ListAssetsRequest.prototype.setAssetNature = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.AssetItem.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.AssetItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.AssetItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.AssetItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    internalId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    previewImageUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isExport: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.AssetItem}
 */
proto.interactive3d_api.AssetItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.AssetItem;
  return proto.interactive3d_api.AssetItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.AssetItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.AssetItem}
 */
proto.interactive3d_api.AssetItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInternalId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviewImageUrl(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIsExport(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.AssetItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.AssetItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.AssetItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.AssetItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInternalId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPreviewImageUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIsExport();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional string internal_id = 1;
 * @return {string}
 */
proto.interactive3d_api.AssetItem.prototype.getInternalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.AssetItem} returns this
 */
proto.interactive3d_api.AssetItem.prototype.setInternalId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.interactive3d_api.AssetItem.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.AssetItem} returns this
 */
proto.interactive3d_api.AssetItem.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string preview_image_url = 3;
 * @return {string}
 */
proto.interactive3d_api.AssetItem.prototype.getPreviewImageUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.AssetItem} returns this
 */
proto.interactive3d_api.AssetItem.prototype.setPreviewImageUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 is_export = 4;
 * @return {number}
 */
proto.interactive3d_api.AssetItem.prototype.getIsExport = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.AssetItem} returns this
 */
proto.interactive3d_api.AssetItem.prototype.setIsExport = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.interactive3d_api.ListAssetsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.ListAssetsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.ListAssetsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.ListAssetsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ListAssetsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    total: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    listList: jspb.Message.toObjectList(msg.getListList(),
    proto.interactive3d_api.AssetItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.ListAssetsResponse}
 */
proto.interactive3d_api.ListAssetsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.ListAssetsResponse;
  return proto.interactive3d_api.ListAssetsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.ListAssetsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.ListAssetsResponse}
 */
proto.interactive3d_api.ListAssetsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setTotal(value);
      break;
    case 2:
      var value = new proto.interactive3d_api.AssetItem;
      reader.readMessage(value,proto.interactive3d_api.AssetItem.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.ListAssetsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.ListAssetsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.ListAssetsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ListAssetsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotal();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.interactive3d_api.AssetItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 total = 1;
 * @return {string}
 */
proto.interactive3d_api.ListAssetsResponse.prototype.getTotal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ListAssetsResponse} returns this
 */
proto.interactive3d_api.ListAssetsResponse.prototype.setTotal = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * repeated AssetItem list = 2;
 * @return {!Array<!proto.interactive3d_api.AssetItem>}
 */
proto.interactive3d_api.ListAssetsResponse.prototype.getListList = function() {
  return /** @type{!Array<!proto.interactive3d_api.AssetItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.interactive3d_api.AssetItem, 2));
};


/**
 * @param {!Array<!proto.interactive3d_api.AssetItem>} value
 * @return {!proto.interactive3d_api.ListAssetsResponse} returns this
*/
proto.interactive3d_api.ListAssetsResponse.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.interactive3d_api.AssetItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.interactive3d_api.AssetItem}
 */
proto.interactive3d_api.ListAssetsResponse.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.interactive3d_api.AssetItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.interactive3d_api.ListAssetsResponse} returns this
 */
proto.interactive3d_api.ListAssetsResponse.prototype.clearListList = function() {
  return this.setListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.ExportAssetByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.ExportAssetByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.ExportAssetByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ExportAssetByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    thirdPartyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    reImport: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.ExportAssetByIdRequest}
 */
proto.interactive3d_api.ExportAssetByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.ExportAssetByIdRequest;
  return proto.interactive3d_api.ExportAssetByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.ExportAssetByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.ExportAssetByIdRequest}
 */
proto.interactive3d_api.ExportAssetByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setThirdPartyId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReImport(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.ExportAssetByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.ExportAssetByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.ExportAssetByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ExportAssetByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThirdPartyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReImport();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string third_party_id = 1;
 * @return {string}
 */
proto.interactive3d_api.ExportAssetByIdRequest.prototype.getThirdPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ExportAssetByIdRequest} returns this
 */
proto.interactive3d_api.ExportAssetByIdRequest.prototype.setThirdPartyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 re_import = 2;
 * @return {number}
 */
proto.interactive3d_api.ExportAssetByIdRequest.prototype.getReImport = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.ExportAssetByIdRequest} returns this
 */
proto.interactive3d_api.ExportAssetByIdRequest.prototype.setReImport = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.ListAssetTypesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.ListAssetTypesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.ListAssetTypesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ListAssetTypesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.ListAssetTypesRequest}
 */
proto.interactive3d_api.ListAssetTypesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.ListAssetTypesRequest;
  return proto.interactive3d_api.ListAssetTypesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.ListAssetTypesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.ListAssetTypesRequest}
 */
proto.interactive3d_api.ListAssetTypesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.ListAssetTypesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.ListAssetTypesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.ListAssetTypesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ListAssetTypesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.AssetTypeItem.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.AssetTypeItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.AssetTypeItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.AssetTypeItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nameEn: jspb.Message.getFieldWithDefault(msg, 3, ""),
    code: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.AssetTypeItem}
 */
proto.interactive3d_api.AssetTypeItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.AssetTypeItem;
  return proto.interactive3d_api.AssetTypeItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.AssetTypeItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.AssetTypeItem}
 */
proto.interactive3d_api.AssetTypeItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNameEn(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.AssetTypeItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.AssetTypeItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.AssetTypeItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.AssetTypeItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNameEn();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.interactive3d_api.AssetTypeItem.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.AssetTypeItem} returns this
 */
proto.interactive3d_api.AssetTypeItem.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.interactive3d_api.AssetTypeItem.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.AssetTypeItem} returns this
 */
proto.interactive3d_api.AssetTypeItem.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name_en = 3;
 * @return {string}
 */
proto.interactive3d_api.AssetTypeItem.prototype.getNameEn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.AssetTypeItem} returns this
 */
proto.interactive3d_api.AssetTypeItem.prototype.setNameEn = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string code = 4;
 * @return {string}
 */
proto.interactive3d_api.AssetTypeItem.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.AssetTypeItem} returns this
 */
proto.interactive3d_api.AssetTypeItem.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.interactive3d_api.ListAssetTypesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.ListAssetTypesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.ListAssetTypesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.ListAssetTypesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ListAssetTypesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    listList: jspb.Message.toObjectList(msg.getListList(),
    proto.interactive3d_api.AssetTypeItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.ListAssetTypesResponse}
 */
proto.interactive3d_api.ListAssetTypesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.ListAssetTypesResponse;
  return proto.interactive3d_api.ListAssetTypesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.ListAssetTypesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.ListAssetTypesResponse}
 */
proto.interactive3d_api.ListAssetTypesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.interactive3d_api.AssetTypeItem;
      reader.readMessage(value,proto.interactive3d_api.AssetTypeItem.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.ListAssetTypesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.ListAssetTypesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.ListAssetTypesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ListAssetTypesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.interactive3d_api.AssetTypeItem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated AssetTypeItem list = 1;
 * @return {!Array<!proto.interactive3d_api.AssetTypeItem>}
 */
proto.interactive3d_api.ListAssetTypesResponse.prototype.getListList = function() {
  return /** @type{!Array<!proto.interactive3d_api.AssetTypeItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.interactive3d_api.AssetTypeItem, 1));
};


/**
 * @param {!Array<!proto.interactive3d_api.AssetTypeItem>} value
 * @return {!proto.interactive3d_api.ListAssetTypesResponse} returns this
*/
proto.interactive3d_api.ListAssetTypesResponse.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.interactive3d_api.AssetTypeItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.interactive3d_api.AssetTypeItem}
 */
proto.interactive3d_api.ListAssetTypesResponse.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.interactive3d_api.AssetTypeItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.interactive3d_api.ListAssetTypesResponse} returns this
 */
proto.interactive3d_api.ListAssetTypesResponse.prototype.clearListList = function() {
  return this.setListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.AssetLabel.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.AssetLabel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.AssetLabel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.AssetLabel.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nameEn: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isSearch: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.AssetLabel}
 */
proto.interactive3d_api.AssetLabel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.AssetLabel;
  return proto.interactive3d_api.AssetLabel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.AssetLabel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.AssetLabel}
 */
proto.interactive3d_api.AssetLabel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNameEn(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIsSearch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.AssetLabel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.AssetLabel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.AssetLabel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.AssetLabel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNameEn();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIsSearch();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.interactive3d_api.AssetLabel.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.AssetLabel} returns this
 */
proto.interactive3d_api.AssetLabel.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.interactive3d_api.AssetLabel.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.AssetLabel} returns this
 */
proto.interactive3d_api.AssetLabel.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name_en = 3;
 * @return {string}
 */
proto.interactive3d_api.AssetLabel.prototype.getNameEn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.AssetLabel} returns this
 */
proto.interactive3d_api.AssetLabel.prototype.setNameEn = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 is_search = 4;
 * @return {number}
 */
proto.interactive3d_api.AssetLabel.prototype.getIsSearch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.AssetLabel} returns this
 */
proto.interactive3d_api.AssetLabel.prototype.setIsSearch = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.ListAssetLabelsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.ListAssetLabelsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.ListAssetLabelsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ListAssetLabelsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageNum: jspb.Message.getFieldWithDefault(msg, 2, 0),
    id: jspb.Message.getFieldWithDefault(msg, 3, 0),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    nameEn: jspb.Message.getFieldWithDefault(msg, 5, ""),
    isSearch: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.ListAssetLabelsRequest}
 */
proto.interactive3d_api.ListAssetLabelsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.ListAssetLabelsRequest;
  return proto.interactive3d_api.ListAssetLabelsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.ListAssetLabelsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.ListAssetLabelsRequest}
 */
proto.interactive3d_api.ListAssetLabelsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPageSize(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPageNum(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setNameEn(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIsSearch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.ListAssetLabelsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.ListAssetLabelsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.ListAssetLabelsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ListAssetLabelsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPageNum();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getNameEn();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIsSearch();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
};


/**
 * optional int64 page_size = 1;
 * @return {number}
 */
proto.interactive3d_api.ListAssetLabelsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.ListAssetLabelsRequest} returns this
 */
proto.interactive3d_api.ListAssetLabelsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 page_num = 2;
 * @return {number}
 */
proto.interactive3d_api.ListAssetLabelsRequest.prototype.getPageNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.ListAssetLabelsRequest} returns this
 */
proto.interactive3d_api.ListAssetLabelsRequest.prototype.setPageNum = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 id = 3;
 * @return {number}
 */
proto.interactive3d_api.ListAssetLabelsRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.ListAssetLabelsRequest} returns this
 */
proto.interactive3d_api.ListAssetLabelsRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.interactive3d_api.ListAssetLabelsRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ListAssetLabelsRequest} returns this
 */
proto.interactive3d_api.ListAssetLabelsRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string name_en = 5;
 * @return {string}
 */
proto.interactive3d_api.ListAssetLabelsRequest.prototype.getNameEn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.interactive3d_api.ListAssetLabelsRequest} returns this
 */
proto.interactive3d_api.ListAssetLabelsRequest.prototype.setNameEn = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 is_search = 6;
 * @return {number}
 */
proto.interactive3d_api.ListAssetLabelsRequest.prototype.getIsSearch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.ListAssetLabelsRequest} returns this
 */
proto.interactive3d_api.ListAssetLabelsRequest.prototype.setIsSearch = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.interactive3d_api.ListAssetLabelsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.ListAssetLabelsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.ListAssetLabelsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.ListAssetLabelsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ListAssetLabelsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    listList: jspb.Message.toObjectList(msg.getListList(),
    proto.interactive3d_api.AssetLabel.toObject, includeInstance),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.ListAssetLabelsResponse}
 */
proto.interactive3d_api.ListAssetLabelsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.ListAssetLabelsResponse;
  return proto.interactive3d_api.ListAssetLabelsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.ListAssetLabelsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.ListAssetLabelsResponse}
 */
proto.interactive3d_api.ListAssetLabelsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.interactive3d_api.AssetLabel;
      reader.readMessage(value,proto.interactive3d_api.AssetLabel.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.ListAssetLabelsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.ListAssetLabelsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.ListAssetLabelsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.ListAssetLabelsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.interactive3d_api.AssetLabel.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * repeated AssetLabel list = 1;
 * @return {!Array<!proto.interactive3d_api.AssetLabel>}
 */
proto.interactive3d_api.ListAssetLabelsResponse.prototype.getListList = function() {
  return /** @type{!Array<!proto.interactive3d_api.AssetLabel>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.interactive3d_api.AssetLabel, 1));
};


/**
 * @param {!Array<!proto.interactive3d_api.AssetLabel>} value
 * @return {!proto.interactive3d_api.ListAssetLabelsResponse} returns this
*/
proto.interactive3d_api.ListAssetLabelsResponse.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.interactive3d_api.AssetLabel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.interactive3d_api.AssetLabel}
 */
proto.interactive3d_api.ListAssetLabelsResponse.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.interactive3d_api.AssetLabel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.interactive3d_api.ListAssetLabelsResponse} returns this
 */
proto.interactive3d_api.ListAssetLabelsResponse.prototype.clearListList = function() {
  return this.setListList([]);
};


/**
 * optional int64 count = 2;
 * @return {number}
 */
proto.interactive3d_api.ListAssetLabelsResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.interactive3d_api.ListAssetLabelsResponse} returns this
 */
proto.interactive3d_api.ListAssetLabelsResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.interactive3d_api.GetAssetLabelsByIdsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.GetAssetLabelsByIdsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.GetAssetLabelsByIdsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.GetAssetLabelsByIdsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.GetAssetLabelsByIdsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    idList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.GetAssetLabelsByIdsRequest}
 */
proto.interactive3d_api.GetAssetLabelsByIdsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.GetAssetLabelsByIdsRequest;
  return proto.interactive3d_api.GetAssetLabelsByIdsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.GetAssetLabelsByIdsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.GetAssetLabelsByIdsRequest}
 */
proto.interactive3d_api.GetAssetLabelsByIdsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addId(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.GetAssetLabelsByIdsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.GetAssetLabelsByIdsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.GetAssetLabelsByIdsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.GetAssetLabelsByIdsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdList();
  if (f.length > 0) {
    writer.writePackedInt64(
      1,
      f
    );
  }
};


/**
 * repeated int64 id = 1;
 * @return {!Array<number>}
 */
proto.interactive3d_api.GetAssetLabelsByIdsRequest.prototype.getIdList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.interactive3d_api.GetAssetLabelsByIdsRequest} returns this
 */
proto.interactive3d_api.GetAssetLabelsByIdsRequest.prototype.setIdList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.interactive3d_api.GetAssetLabelsByIdsRequest} returns this
 */
proto.interactive3d_api.GetAssetLabelsByIdsRequest.prototype.addId = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.interactive3d_api.GetAssetLabelsByIdsRequest} returns this
 */
proto.interactive3d_api.GetAssetLabelsByIdsRequest.prototype.clearIdList = function() {
  return this.setIdList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.interactive3d_api.GetAssetLabelsByIdsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.GetAssetLabelsByIdsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.GetAssetLabelsByIdsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.GetAssetLabelsByIdsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.GetAssetLabelsByIdsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    listList: jspb.Message.toObjectList(msg.getListList(),
    proto.interactive3d_api.AssetLabel.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.GetAssetLabelsByIdsResponse}
 */
proto.interactive3d_api.GetAssetLabelsByIdsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.GetAssetLabelsByIdsResponse;
  return proto.interactive3d_api.GetAssetLabelsByIdsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.GetAssetLabelsByIdsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.GetAssetLabelsByIdsResponse}
 */
proto.interactive3d_api.GetAssetLabelsByIdsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.interactive3d_api.AssetLabel;
      reader.readMessage(value,proto.interactive3d_api.AssetLabel.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.GetAssetLabelsByIdsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.GetAssetLabelsByIdsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.GetAssetLabelsByIdsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.GetAssetLabelsByIdsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.interactive3d_api.AssetLabel.serializeBinaryToWriter
    );
  }
};


/**
 * repeated AssetLabel list = 1;
 * @return {!Array<!proto.interactive3d_api.AssetLabel>}
 */
proto.interactive3d_api.GetAssetLabelsByIdsResponse.prototype.getListList = function() {
  return /** @type{!Array<!proto.interactive3d_api.AssetLabel>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.interactive3d_api.AssetLabel, 1));
};


/**
 * @param {!Array<!proto.interactive3d_api.AssetLabel>} value
 * @return {!proto.interactive3d_api.GetAssetLabelsByIdsResponse} returns this
*/
proto.interactive3d_api.GetAssetLabelsByIdsResponse.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.interactive3d_api.AssetLabel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.interactive3d_api.AssetLabel}
 */
proto.interactive3d_api.GetAssetLabelsByIdsResponse.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.interactive3d_api.AssetLabel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.interactive3d_api.GetAssetLabelsByIdsResponse} returns this
 */
proto.interactive3d_api.GetAssetLabelsByIdsResponse.prototype.clearListList = function() {
  return this.setListList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.interactive3d_api.DeleteBatchAssetsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.interactive3d_api.DeleteBatchAssetsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.interactive3d_api.DeleteBatchAssetsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.interactive3d_api.DeleteBatchAssetsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.DeleteBatchAssetsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.interactive3d_api.DeleteBatchAssetsRequest}
 */
proto.interactive3d_api.DeleteBatchAssetsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.interactive3d_api.DeleteBatchAssetsRequest;
  return proto.interactive3d_api.DeleteBatchAssetsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.interactive3d_api.DeleteBatchAssetsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.interactive3d_api.DeleteBatchAssetsRequest}
 */
proto.interactive3d_api.DeleteBatchAssetsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addModelIds(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.interactive3d_api.DeleteBatchAssetsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.interactive3d_api.DeleteBatchAssetsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.interactive3d_api.DeleteBatchAssetsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.interactive3d_api.DeleteBatchAssetsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelIdsList();
  if (f.length > 0) {
    writer.writePackedInt64(
      1,
      f
    );
  }
};


/**
 * repeated int64 model_ids = 1;
 * @return {!Array<number>}
 */
proto.interactive3d_api.DeleteBatchAssetsRequest.prototype.getModelIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.interactive3d_api.DeleteBatchAssetsRequest} returns this
 */
proto.interactive3d_api.DeleteBatchAssetsRequest.prototype.setModelIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.interactive3d_api.DeleteBatchAssetsRequest} returns this
 */
proto.interactive3d_api.DeleteBatchAssetsRequest.prototype.addModelIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.interactive3d_api.DeleteBatchAssetsRequest} returns this
 */
proto.interactive3d_api.DeleteBatchAssetsRequest.prototype.clearModelIdsList = function() {
  return this.setModelIdsList([]);
};


goog.object.extend(exports, proto.interactive3d_api);
